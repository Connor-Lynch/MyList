{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"../../../actions/actions.component\";\nexport let EditItemComponent = /*#__PURE__*/(() => {\n  class EditItemComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.acceptEvent = new EventEmitter();\n      this.declineEvent = new EventEmitter();\n      this.controlName = 'name';\n    }\n    ngOnInit() {\n      this.formGroup = this.formBuilder.group({\n        [this.controlName]: [this.inputText]\n      });\n    }\n    accept() {\n      const newValue = this.formGroup.controls[this.controlName].value?.trim();\n      newValue ? this.acceptEvent.emit(newValue) : this.cancel();\n    }\n    cancel() {\n      this.declineEvent.emit();\n    }\n    static #_ = this.ɵfac = function EditItemComponent_Factory(t) {\n      return new (t || EditItemComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditItemComponent,\n      selectors: [[\"app-edit-item\"]],\n      inputs: {\n        inputText: \"inputText\"\n      },\n      outputs: {\n        acceptEvent: \"acceptEvent\",\n        declineEvent: \"declineEvent\"\n      },\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"w-full\", \"h-4rem\", \"flex\", \"align-items-center\"], [1, \"m-0\", \"pl-1\", \"w-full\", 3, \"formGroup\", \"ngSubmit\"], [\"id\", \"edit-name\", 1, \"w-full\"], [\"matInput\", \"\", \"type\", \"text\", 3, \"formControlName\"], [\"id\", \"edit-actions\", 3, \"acceptEvent\", \"declineEvent\"]],\n      template: function EditItemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function EditItemComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.accept();\n          });\n          i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n          i0.ɵɵelement(3, \"input\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"app-actions\", 4);\n          i0.ɵɵlistener(\"acceptEvent\", function EditItemComponent_Template_app_actions_acceptEvent_4_listener() {\n            return ctx.accept();\n          })(\"declineEvent\", function EditItemComponent_Template_app_actions_declineEvent_4_listener() {\n            return ctx.cancel();\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formControlName\", ctx.controlName);\n        }\n      },\n      dependencies: [i2.MatInput, i3.MatFormField, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.ActionsComponent]\n    });\n  }\n  return EditItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}