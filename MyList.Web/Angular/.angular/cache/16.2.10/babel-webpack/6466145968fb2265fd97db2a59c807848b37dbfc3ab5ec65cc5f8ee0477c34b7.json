{"ast":null,"code":"import { AppConfiguration } from \"read-appsettings-json\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/snack-bar\";\nexport let ShoppingListItemService = /*#__PURE__*/(() => {\n  class ShoppingListItemService {\n    constructor(http, snackBar) {\n      this.http = http;\n      this.snackBar = snackBar;\n      this.apiRootUrl = AppConfiguration.Setting().apiUrl;\n    }\n    addShoppingListItem(newList) {\n      const endpoint = `${this.apiRootUrl}/ShoppingListItems/Add`;\n      return this.http.post(endpoint, newList).pipe(catchError(e => this.handleError(\"Unable to Add Item\", e)));\n    }\n    updateShoppingListItem(updatedList) {\n      const endpoint = `${this.apiRootUrl}/ShoppingListItems/Update`;\n      return this.http.put(endpoint, updatedList).pipe(catchError(e => this.handleError(\"Unable to Update Item\", e)));\n    }\n    removeShoppingListItem(id) {\n      const endpoint = `${this.apiRootUrl}/ShoppingListItems/Delete/${id}`;\n      return this.http.delete(endpoint).pipe(catchError(e => this.handleError(\"Unable to Remove Item\", e)));\n    }\n    handleError(message, error) {\n      this.snackBar.open(message, \"Dismiss\");\n      throw error;\n    }\n    static #_ = this.ɵfac = function ShoppingListItemService_Factory(t) {\n      return new (t || ShoppingListItemService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MatSnackBar));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ShoppingListItemService,\n      factory: ShoppingListItemService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ShoppingListItemService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}