{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/checkbox\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"../edit-item/edit-item.component\";\nfunction AddItemComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"mat-checkbox\", 4);\n    i0.ɵɵelementStart(2, \"app-edit-item\", 5);\n    i0.ɵɵlistener(\"acceptEvent\", function AddItemComponent_div_0_Template_app_edit_item_acceptEvent_2_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addItem($event));\n    })(\"declineEvent\", function AddItemComponent_div_0_Template_app_edit_item_declineEvent_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.cancel());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", true);\n  }\n}\nexport let AddItemComponent = /*#__PURE__*/(() => {\n  class AddItemComponent {\n    constructor() {\n      this.listStateChange = new EventEmitter();\n      this.addItemEvent = new EventEmitter();\n    }\n    toggleAddNewItem() {\n      this.listState.tryAddItem();\n      this.listStateChange.emit(this.listState);\n    }\n    addItem(newValue) {\n      this.addItemEvent.emit(newValue);\n      this.toggleAddNewItem();\n    }\n    cancel() {\n      this.toggleAddNewItem();\n    }\n    static #_ = this.ɵfac = function AddItemComponent_Factory(t) {\n      return new (t || AddItemComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddItemComponent,\n      selectors: [[\"app-add-item\"]],\n      inputs: {\n        listState: \"listState\"\n      },\n      outputs: {\n        listStateChange: \"listStateChange\",\n        addItemEvent: \"addItemEvent\"\n      },\n      decls: 6,\n      vars: 2,\n      consts: [[\"class\", \"w-full h-4rem grid grid-nogutter flex align-items-center\", 4, \"ngIf\"], [1, \"flex\", \"justify-content-center\", \"mt-3\"], [\"mat-button\", \"\", \"id\", \"add-button\", 3, \"disabled\", \"click\"], [1, \"w-full\", \"h-4rem\", \"grid\", \"grid-nogutter\", \"flex\", \"align-items-center\"], [\"id\", \"checkbox\", 1, \"col-1\", 3, \"disabled\"], [1, \"col-11\", 3, \"acceptEvent\", \"declineEvent\"]],\n      template: function AddItemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AddItemComponent_div_0_Template, 3, 1, \"div\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function AddItemComponent_Template_button_click_2_listener() {\n            return ctx.toggleAddNewItem();\n          });\n          i0.ɵɵelementStart(3, \"mat-icon\");\n          i0.ɵɵtext(4, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(5, \" Add Item \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.listState == null ? null : ctx.listState.addInProgress);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !!(ctx.listState == null ? null : ctx.listState.itemUnderEditId) || (ctx.listState == null ? null : ctx.listState.addInProgress));\n        }\n      },\n      dependencies: [i1.NgIf, i2.MatCheckbox, i3.MatButton, i4.MatIcon, i5.EditItemComponent]\n    });\n  }\n  return AddItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}