{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/divider\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"../actions/actions.component\";\nfunction ListNameComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ListNameComponent_div_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.edit());\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.formGroup.controls[ctx_r0.controlName].value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.externalEditInProgress);\n  }\n}\nfunction ListNameComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function ListNameComponent_div_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.acceptEdit());\n    });\n    i0.ɵɵelementStart(2, \"mat-form-field\", 5);\n    i0.ɵɵelement(3, \"input\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"app-actions\", 7);\n    i0.ɵɵlistener(\"acceptEvent\", function ListNameComponent_div_2_Template_app_actions_acceptEvent_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.acceptEdit());\n    })(\"declineEvent\", function ListNameComponent_div_2_Template_app_actions_declineEvent_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.cancelEdit());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.formGroup);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.controlName);\n  }\n}\nexport let ListNameComponent = /*#__PURE__*/(() => {\n  class ListNameComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.controlName = 'name';\n      this.onChange = value => undefined;\n      this.onTouched = () => undefined;\n    }\n    ngOnInit() {\n      this.formGroup = this.formBuilder.group({\n        [this.controlName]: []\n      });\n    }\n    edit() {\n      this.isEditing = true;\n      this.pristineValue = this.formGroup.controls[this.controlName].value;\n    }\n    acceptEdit() {\n      this.isEditing = false;\n      this.onChange(this.formGroup.controls[this.controlName].value);\n    }\n    cancelEdit() {\n      this.isEditing = false;\n      this.formGroup.controls[this.controlName].setValue(this.pristineValue);\n    }\n    writeValue(value) {\n      this.formGroup?.controls[this.controlName].setValue(value);\n    }\n    setDisabledState(isDisabled) {\n      isDisabled ? this.formGroup.disable() : this.formGroup.enable();\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    static #_ = this.ɵfac = function ListNameComponent_Factory(t) {\n      return new (t || ListNameComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListNameComponent,\n      selectors: [[\"app-list-name\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => ListNameComponent),\n        multi: true\n      }])],\n      decls: 4,\n      vars: 2,\n      consts: [[\"class\", \"flex justify-content-between align-content-center\", 4, \"ngIf\"], [1, \"flex\", \"justify-content-between\", \"align-content-center\"], [1, \"m-0\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"id\", \"edit-button\", 3, \"disabled\", \"click\"], [1, \"w-full\", 3, \"formGroup\", \"ngSubmit\"], [1, \"w-full\"], [\"matInput\", \"\", \"type\", \"text\", 1, \"form-input\", 3, \"formControlName\"], [3, \"acceptEvent\", \"declineEvent\"]],\n      template: function ListNameComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\");\n          i0.ɵɵtemplate(1, ListNameComponent_div_1_Template, 6, 2, \"div\", 0);\n          i0.ɵɵtemplate(2, ListNameComponent_div_2_Template, 5, 2, \"div\", 0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"mat-divider\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isEditing);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isEditing);\n        }\n      },\n      dependencies: [i2.NgIf, i3.MatDivider, i4.MatIconButton, i5.MatInput, i6.MatFormField, i7.MatIcon, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.ActionsComponent]\n    });\n  }\n  return ListNameComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}